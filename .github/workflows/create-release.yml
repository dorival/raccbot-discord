on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Variables
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
        env: |
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Refer to README.md for details.
          draft: false
          prerelease: false

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RACCBOT_PROD_AWS_HOST }}
          username: ${{ secrets.RACCBOT_PROD_AWS_USER }}
          key: ${{ secrets.RACCBOT_PROD_AWS_KEY }}
          port: ${{ secrets.RACCBOT_PROD_AWS_PORT }}
          script: |
            cd bot
            wget -P ./ https://github.com/dorival/raccbot-discord/archive/${{ SOURCE_TAG }}.tar.gz
            tar -C ./ -xvf ${{ SOURCE_TAG }}.tar.gz
            rm ${{ SOURCE_TAG }}.tar.gz
            pm2 delete raccbot-discord 2> /dev/null || true
            rm -r raccbot-discord/
            mv ./raccbot-discord-* ./raccbot-discord
            cd raccbot-discord
            echo 'TOKEN=${{ secrets.RACCBOT_PROD_DISCORD_TOKEN }}' > ./.env
            npm i
            pm2 start index.js --name raccbot-discord
